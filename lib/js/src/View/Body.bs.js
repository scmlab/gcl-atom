// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Rebase = require("@glennsl/rebase/lib/js/src/Rebase.bs.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Pred$GclAtom = require("./Pred.bs.js");
var Util$GclAtom = require("../Util.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function Body$ProofObligation(Props) {
  var payload = Props.payload;
  return React.createElement("li", {
              className: "gcl-proof-obligation-item"
            }, React.createElement("span", undefined, String(payload[0])), React.createElement("span", undefined, Pred$GclAtom.toString(payload[1])));
}

function decode(param) {
  return Json_decode.map((function (param) {
                return /* ProofObligation */Caml_chrome_debugger.simpleVariant("ProofObligation", [
                          param[0],
                          param[1]
                        ]);
              }), (function (param) {
                return Json_decode.pair(Json_decode.$$int, Pred$GclAtom.decode, param);
              }), param);
}

var ProofObligation = {
  make: Body$ProofObligation,
  decode: decode
};

function Body(Props) {
  var body = Props.body;
  if (typeof body === "number") {
    return React.createElement(React.Fragment, undefined);
  } else if (body.tag) {
    var paragraphs = Util$GclAtom.React.manyIn("div", {
            className: "gcl-plain-text"
          })(Rebase.$$Array.map((function (s) {
                return React.createElement("p", undefined, s);
              }), Rebase.$$Array.filter((function (x) {
                    return !Rebase.$$String.isEmpty(x);
                  }), body[0].split("\n"))));
    return React.createElement("div", {
                className: "gcl-body"
              }, paragraphs);
  } else {
    var ps = body[0];
    if (ps.length !== 0) {
      var list = Util$GclAtom.React.manyIn("ul", {
              className: "gcl-proof-obligation-list"
            })(Rebase.$$Array.map((function (payload) {
                  return React.createElement(Body$ProofObligation, {
                              payload: payload
                            });
                }), ps));
      return React.createElement("div", {
                  className: "gcl-body"
                }, list);
    } else {
      return React.createElement(React.Fragment, undefined);
    }
  }
}

var make = Body;

exports.ProofObligation = ProofObligation;
exports.make = make;
/* react Not a pure module */
