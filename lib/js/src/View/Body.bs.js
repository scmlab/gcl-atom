// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Link$GclAtom = require("./Link.bs.js");
var Pred$GclAtom = require("./Pred.bs.js");
var Util$GclAtom = require("../Util/Util.bs.js");
var Response$GclAtom = require("../GCL/Response.bs.js");

function Body$ProofObligation(Props) {
  var payload = Props.payload;
  var o = payload[3];
  var origin = React.createElement(Link$GclAtom.make, {
        loc: Response$GclAtom.Origin.locOf(o),
        children: Response$GclAtom.Origin.toString(o)
      });
  return React.createElement("li", {
              className: "gcl-body-item native-key-bindings",
              tabIndex: -1
            }, React.createElement("span", {
                  className: "gcl-proof-obligation-message"
                }, origin), React.createElement("span", {
                  className: "gcl-proof-obligation-antecedent"
                }, React.createElement(Pred$GclAtom.make, {
                      value: payload[1]
                    })), React.createElement("span", {
                  className: "gcl-proof-obligation-arrow"
                }, "â‡’"), React.createElement("span", {
                  className: "gcl-proof-obligation-consequent"
                }, React.createElement(Pred$GclAtom.make, {
                      value: payload[2]
                    })));
}

var ProofObligation = {
  make: Body$ProofObligation
};

function Body(Props) {
  var body = Props.body;
  if (typeof body === "number") {
    return React.createElement(React.Fragment, undefined);
  } else if (body.tag) {
    var paragraphs = Util$GclAtom.React.manyIn2(Belt_Array.map(Belt_Array.keep("\n".split(body[0]), (function (x) {
                    return x !== "";
                  })), (function (s) {
                return React.createElement("p", undefined, s);
              })), "div", {
          className: "gcl-plain-text gcl-body-item"
        });
    return React.createElement("div", {
                className: "gcl-body"
              }, paragraphs);
  } else {
    var ps = body[0];
    if (ps.length !== 0) {
      var list = Util$GclAtom.React.manyIn2(Belt_Array.map(ps, (function (payload) {
                  return React.createElement(Body$ProofObligation, {
                              payload: payload
                            });
                })), "ul", {
            className: "gcl-proof-obligation-list"
          });
      return React.createElement("div", {
                  className: "gcl-body"
                }, list);
    } else {
      return React.createElement(React.Fragment, undefined);
    }
  }
}

var make = Body;

exports.ProofObligation = ProofObligation;
exports.make = make;
/* react Not a pure module */
