// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Hook$GclAtom = require("./Hook.bs.js");
var Util$GclAtom = require("../Util.bs.js");
var Async$GclAtom = require("../Util/Async.bs.js");

function Panel(Props) {
  var channels = Props.channels;
  var match = Hook$GclAtom.useState(/* AllGood */0);
  var setHeader = match[1];
  var header = match[0];
  var match$1 = Hook$GclAtom.useState(/* Nothing */0);
  var setBody = match$1[1];
  var body = match$1[0];
  var match$2 = Hook$GclAtom.useState(false);
  var setActivation = match$2[1];
  Hook$GclAtom.useChannel((function (x) {
          return Async$GclAtom.resolve(Curry._1(setHeader, x));
        }), channels[/* setHeader */2]);
  Hook$GclAtom.useChannel((function (x) {
          return Async$GclAtom.resolve(Curry._1(setBody, x));
        }), channels[/* setBody */3]);
  Hook$GclAtom.useChannel((function (x) {
          return Async$GclAtom.resolve(Curry._1(setActivation, x));
        }), channels[/* setActivation */1]);
  var headerElem;
  headerElem = typeof header === "number" ? React.createElement("h2", {
          className: "gcl-header"
        }, React.createElement("div", {
              className: "text-success"
            }, "All Good")) : (
      header.tag ? React.createElement("h2", {
              className: "gcl-header"
            }, React.createElement("div", {
                  className: "text-error"
                }, header[0])) : React.createElement("h2", {
              className: "gcl-header"
            }, React.createElement("div", undefined, header[0]))
    );
  var bodyElem;
  if (body) {
    var partial_arg = Util$GclAtom.React.manyIn;
    var arg = function (param) {
      return partial_arg("div", param);
    };
    var paragraphs = (function (eta) {
          return Curry._2(arg, undefined, eta);
        })($$Array.map((function (s) {
                return React.createElement("p", undefined, s);
              }), body[0].split("\n")));
    bodyElem = React.createElement("div", {
          className: "gcl-body"
        }, paragraphs);
  } else {
    bodyElem = React.createElement(React.Fragment, undefined);
  }
  return React.createElement("section", {
              className: match$2[0] ? "" : "hidden"
            }, headerElem, bodyElem);
}

var make = Panel;

exports.make = make;
/* react Not a pure module */
