// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Body$GclAtom = require("./Body.bs.js");
var Hook$GclAtom = require("./Hook.bs.js");
var Link$GclAtom = require("./Link.bs.js");
var Header$Guacamole = require("guacamole/lib/js/src/View/Header.bs.js");

function Panel(Props) {
  var channels = Props.channels;
  var events = Props.events;
  var match = Hook$GclAtom.useState(/* Loading */0);
  var setHeader = match[1];
  var match$1 = Hook$GclAtom.useState(/* Nothing */0);
  var setBody = match$1[1];
  var match$2 = Hook$GclAtom.useState(false);
  var setActivation = match$2[1];
  var match$3 = React.useState((function () {
          return /* WP1 */0;
        }));
  var setMode = match$3[1];
  var mode = match$3[0];
  Hook$GclAtom.useChannel((function (x) {
          return $$Promise.resolved(Curry._1(setHeader, x));
        }), channels.setHeader);
  Hook$GclAtom.useChannel((function (x) {
          return $$Promise.resolved(Curry._1(setBody, x));
        }), channels.setBody);
  Hook$GclAtom.useChannel((function (x) {
          return $$Promise.resolved(Curry._1(setActivation, x));
        }), channels.setActivation);
  var onChangeMode = function (mode) {
    return Curry._1(setMode, (function (param) {
                  return mode;
                }));
  };
  React.useEffect((function () {
          Curry._1(events.onSetMode.emit, mode);
          return ;
        }), [mode]);
  return React.createElement(Link$GclAtom.Provider.make, Link$GclAtom.Provider.makeProps(events.onLink, React.createElement("section", {
                      className: match$2[0] ? "" : "hidden"
                    }, React.createElement(Header$Guacamole.make, {
                          header: match[0],
                          editorType: /* Atom */0,
                          mode: mode,
                          onChangeMode: onChangeMode
                        }), React.createElement(Body$GclAtom.make, {
                          body: match$1[0]
                        })), /* () */0));
}

var make = Panel;

exports.make = make;
/* react Not a pure module */
