// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Decoder$GclAtom = require("../GCL/Decoder.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function decode(param) {
  return Json_decode.map((function (tag) {
                switch (tag) {
                  case "TBool" :
                      return /* Bool */1;
                  case "TInt" :
                      return /* Int */0;
                  default:
                    throw [
                          Json_decode.DecodeError,
                          "Unknown constructor: " + tag
                        ];
                }
              }), Json_decode.string, param);
}

function toString(param) {
  if (param) {
    return "Bool";
  } else {
    return "Int";
  }
}

var Base = {
  decode: decode,
  toString: toString
};

function decode$1(json) {
  return Decoder$GclAtom.sum((function (tag) {
                  switch (tag) {
                    case "TArray" :
                        return /* Contents */Caml_chrome_debugger.variant("Contents", 0, [(function (param) {
                                      return Json_decode.map((function (x) {
                                                    return /* Array */Caml_chrome_debugger.variant("Array", 1, [x]);
                                                  }), decode$1, param);
                                    })]);
                    case "TBase" :
                        return /* Contents */Caml_chrome_debugger.variant("Contents", 0, [(function (param) {
                                      return Json_decode.map((function (x) {
                                                    return /* Base */Caml_chrome_debugger.variant("Base", 0, [x]);
                                                  }), decode, param);
                                    })]);
                    case "TFun" :
                        return /* Contents */Caml_chrome_debugger.variant("Contents", 0, [(function (param) {
                                      return Json_decode.map((function (param) {
                                                    return /* Func */Caml_chrome_debugger.variant("Func", 2, [
                                                              param[0],
                                                              param[1]
                                                            ]);
                                                  }), (function (param) {
                                                    return Json_decode.pair(decode$1, decode$1, param);
                                                  }), param);
                                    })]);
                    case "TVar" :
                        return /* Contents */Caml_chrome_debugger.variant("Contents", 0, [(function (param) {
                                      return Json_decode.map((function (x) {
                                                    return /* Var */Caml_chrome_debugger.variant("Var", 3, [x]);
                                                  }), Json_decode.$$int, param);
                                    })]);
                    default:
                      throw [
                            Json_decode.DecodeError,
                            "Unknown constructor: " + tag
                          ];
                  }
                }))(json);
}

function toString$1(param) {
  switch (param.tag | 0) {
    case /* Base */0 :
        if (param[0]) {
          return "Bool";
        } else {
          return "Int";
        }
    case /* Array */1 :
        return "Array " + toString$1(param[0]);
    case /* Func */2 :
        return toString$1(param[0]) + (" -> " + toString$1(param[1]));
    case /* Var */3 :
        return "Var " + String(param[0]);
    
  }
}

exports.Base = Base;
exports.decode = decode$1;
exports.toString = toString$1;
/* Decoder-GclAtom Not a pure module */
