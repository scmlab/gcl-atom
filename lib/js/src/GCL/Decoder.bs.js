// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function sum(decoder) {
  return (function (param) {
      return Json_decode.andThen((function (tag) {
                    var match = Curry._1(decoder, tag);
                    if (match.tag) {
                      return match[0];
                    } else {
                      var d = match[0];
                      return (function (param) {
                          return Json_decode.field("contents", d, param);
                        });
                    }
                  }), (function (param) {
                    return Json_decode.field("tag", Json_decode.string, param);
                  }), param);
    });
}

function maybe(decoder) {
  return sum((function (param) {
                if (param === "Just") {
                  return /* Contents */Caml_chrome_debugger.variant("Contents", 0, [(function (json) {
                                return Caml_option.some(Curry._1(decoder, json));
                              })]);
                } else {
                  return /* TagOnly */Caml_chrome_debugger.variant("TagOnly", 1, [(function (param) {
                                return ;
                              })]);
                }
              }));
}

exports.sum = sum;
exports.maybe = maybe;
/* No side effect */
