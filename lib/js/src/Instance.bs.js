// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Async$GclAtom = require("./Util/Async.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function make(editor) {
  console.log("[ instance ][ construct ]", editor.getPath());
  atom.views.getView(editor).classList.add("gcl");
  return /* record */Caml_chrome_debugger.record(["editor"], [editor]);
}

function destroy(self) {
  console.log("[ instance ][ destroy ]", self[/* editor */0].getPath());
  atom.views.getView(self[/* editor */0]).classList.remove("gcl");
  return /* () */0;
}

function dispatch(command, self) {
  switch (command) {
    case /* Activate */0 :
        console.log("[ activate ]");
        return /* () */0;
    case /* Deactivate */1 :
        console.log("[ deactivate ]");
        return /* () */0;
    case /* Save */2 :
        return Async$GclAtom.finalOk((function (param) {
                      console.log("[ save ]");
                      return /* () */0;
                    }), Async$GclAtom.fromPromise(self[/* editor */0].save()));
    
  }
}

function activate(param) {
  return /* () */0;
}

function deactivate(param) {
  return /* () */0;
}

var $$Event = 0;

exports.$$Event = $$Event;
exports.make = make;
exports.destroy = destroy;
exports.dispatch = dispatch;
exports.activate = activate;
exports.deactivate = deactivate;
/* No side effect */
