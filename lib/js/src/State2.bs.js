// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Connection$Guacamole = require("guacamole/lib/js/src/Connection.bs.js");

function Impl(Editor) {
  var connect = function (state) {
    var match = state.connection;
    if (match !== undefined) {
      return $$Promise.resolved(/* Ok */Caml_chrome_debugger.variant("Ok", 0, [match]));
    } else {
      return $$Promise.tapOk($$Promise.mapError(Connection$Guacamole.make(Editor.getGCLPath, Editor.setGCLPath), (function (e) {
                        return /* Connection */Caml_chrome_debugger.variant("Connection", 0, [e]);
                      })), (function (conn) {
                    state.connection = conn;
                    return /* () */0;
                  }));
    }
  };
  var disconnect = function (state) {
    var match = state.connection;
    if (match !== undefined) {
      return Connection$Guacamole.disconnect(match);
    } else {
      return $$Promise.resolved(/* () */0);
    }
  };
  var make = function (param, editor) {
    return {
            editor: editor,
            loaded: false,
            mode: /* WP1 */0,
            connection: undefined
          };
  };
  var destroy = function (state) {
    state.loaded = false;
    return disconnect(state);
  };
  return {
          make: make,
          destroy: destroy,
          connect: connect,
          disconnect: disconnect
        };
}

exports.Impl = Impl;
/* Promise Not a pure module */
