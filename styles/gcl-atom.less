// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";

// <TextEditor>
.gcl {

  // Fixes the problem that the "ghost" of a goal index that remains at the
  // original unshifted position would block some events (e.g. mouse clicks)
  // from getting through.
  atom-overlay {
      pointer-events: none;
  }

  // line-number
  .line-number-error {
    @color: saturate(@background-color-error, 100%);
    background: fade(mix(@color, @syntax-background-color, 80%), 50%) !important;
  }

  // overlay
  .overlay-error {
    border-bottom: dotted red 2px;
    position: relative;
  }

  .overlay-spec-text {
    color: @text-color-subtle;
    position: relative;
  }

  // highlight
  .highlight-spec-soft {
    @color: saturate(@background-color-info, 100%);
    background: fade(mix(@color, @syntax-background-color, 60%), 50%);
  }

  .highlight-spec-hard {
    @color: saturate(@background-color-warning, 100%);
    background: fade(mix(@color, @syntax-background-color, 60%), 50%);
  }

  .highlight-link {
    @color: saturate(@background-color-warning, 100%);
    background: fade(mix(@color, @syntax-background-color, 60%), 50%);
  }
}

// <Panel>
.gcl-panel {

  // For hiding React components
  .hidden { display: none }

	font-size: var(--editor-font-size) !important;
	line-height: var(--editor-line-height) !important;

  .gcl-header {
    font-size: 100%;
    margin: 0;
    padding: @component-padding * 2 @component-padding;

    display: flex;
    justify-content: space-between;

    .gcl-mode {
      font-size: 50%;
    }
  }

  .gcl-body {
    margin: 0 @component-padding @component-padding @component-padding;

    // limits the inner height and let scroll if overflow
    max-height: 300px;
    overflow-y: scroll;

    .gcl-body-item {
      background: @base-background-color;
      padding: @component-padding;
      margin-bottom: @component-padding * 2;
    }

    .gcl-body-item:last-of-type {
      margin-bottom: 0
    }

    .gcl-plain-text {
      p:last-of-type {
        margin-bottom: 0
      }
    }

    .gcl-proof-obligation-list {
      list-style: none;
      padding: 0;
      margin: 0;

      li {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: flex-start;

        .gcl-proof-obligation-message {
          // display: none;
          width: 100%;

          font-size: 75%;
          font-variant: small-caps;
          font-weight: bolder;
          color: @text-color-subtle;
        }

        .gcl-proof-obligation-antecedent { width: 45% }
        .gcl-proof-obligation-consequent { width: 45% }
        .gcl-proof-obligation-arrow      {
          width: 10%;
          text-align: center;
        }
      }
    }
  }



  .expr {
    white-space:pre;
    color: @text-color-highlight;

    display: inline-flex;

    .expr-paren {
      cursor: zoom-out;
      &.hovered { color: @text-color-selected }
      &.collapsed { cursor: zoom-in }
    }

    .expr-link {
      display: inline-flex;
      &:hover { color: @text-color-selected }
    }
  }

  .marker {
    display: inline-flex;
    flex-direction: column;

    // color: @background-color-success;

    // cursor: pointer;

//     &.marker-assertion .marker-content {
//       // color: desaturate(@text-color-error, 30%) !important;
//       // color: red;
// // @background-color-selected ;
//     }

    .marker-line {
      height: 8px;
      border-bottom: 4px @text-color-subtle;


      &:hover { border-color: @text-color }

      &.marker-guard { border-bottom-style: dashed }
      &.marker-assertion { border-bottom-style: solid }

      &.marker-if { border-color: desaturate(@background-color-success, 30%);  }
      &.marker-if:hover { border-color: @text-color-success }

      &.marker-loop { border-color: desaturate(@background-color-info, 30%); }
      &.marker-loop:hover { border-color: @text-color-info }

      &.marker-bound {
        border-bottom-style: solid;
        border-color: desaturate(@background-color-warning, 30%);
      }
      &.marker-bound:hover { border-color: @text-color-warning }

      &:marker { background: lighten(@background-color-selected, 5%) }
    }

    .marker-text {
      display: none;
      text-align: center;

      font-size: 75%;
      font-variant: small-caps;
      font-weight: bolder;
      color: @text-color-subtle;

      &.marker-if { color: desaturate(@background-color-success, 30%) }
      &.marker-if:hover { color: @text-color-success }
      //
      &.marker-loop { color: desaturate(@background-color-info, 30%) }
      &.marker-loop:hover { color: @text-color-info }

      &.marker-bound { color: desaturate(@background-color-warning, 30%); }
      &.marker-bound:hover { color: @text-color-warning }

    }

  }
}


// prevents goal indices from floating above the status bar
// see #14: https://github.com/banacorn/agda-mode/issues/14
status-bar.status-bar           { z-index: 4 }
atom-pane > [is="atom-tabs"]    { z-index: 5 }
atom-text-editor[data-grammar~="gcl"] {
    z-index: 0;
}
